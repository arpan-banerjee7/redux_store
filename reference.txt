// store.dispatch(addTodoAction({
      //   id: 0,
      //   name: 'Walk the dog',
      //   complete: false,
      // }))

      // store.dispatch(addTodoAction({
      //   id: 1,
      //   name: 'Wash the car',
      //   complete: false,
      // }))

      // store.dispatch(addTodoAction({
      //   id: 2,
      //   name: 'Go to the gym',
      //   complete: true,
      // }))

      // store.dispatch(removeTodoAction(1))

      // store.dispatch(toggleTodoAction(0))

      // store.dispatch(addGoalAction({
      //   id: 0,
      //   name: 'Learn Redux'
      // }))

      // store.dispatch(addGoalAction({
      //   id: 1,
      //   name: 'Lose 20 pounds'
      // }))

      // store.dispatch(removeGoalAction(0))


    //custom store
     // Library code
      function createStore(reducer) {
        // The store should have four parts
        // 1. The state
        // 2. Get the state. (getState)
        // 3. Listen to changes on the state. (subscribe)
        // 4. Update the state (dispatch)

        let state;
        let listeners = [];--> array of functions

        const getState = () => state;

//whenever the state changes, we as implementers of the store should make sure to callany of the functions passed to
//subscribe method whenever the state changes.
        const subscribe = (listener) => {
          listeners.push(listener);
          return () => {
            listeners = listeners.filter((l) => l !== listener);
          };
        };

        const dispatch = (action) => {
          state = reducer(state, action);
          listeners.forEach((listener) => listener());-->when state changes loop through all listeners and clal them
        };

        return {
          getState,
          subscribe,
          dispatch,
        };
      }

      //custom middleware

        function checkAndDispatch(store, action) {
        if (
          action.type === ADD_TODO &&
          action.todo.name.toLowerCase().indexOf("bitcoin") !== -1
        ) {
          return alert("Nope. That's a bad idea.");
        }

        if (
          action.type === ADD_GOAL &&
          action.goal.name.toLowerCase().indexOf("bitcoin") !== -1
        ) {
          return alert("Nope. That's a bad idea.");
        }

        return store.dispatch(action);
      }